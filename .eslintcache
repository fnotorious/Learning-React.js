[{"C:\\Users\\frsna\\OneDrive\\Desktop\\counter-app\\src\\index.js":"1","C:\\Users\\frsna\\OneDrive\\Desktop\\counter-app\\src\\App.js":"2","C:\\Users\\frsna\\OneDrive\\Desktop\\counter-app\\src\\reportWebVitals.js":"3","C:\\Users\\frsna\\OneDrive\\Desktop\\counter-app\\src\\components\\counter.jsx":"4","C:\\Users\\frsna\\OneDrive\\Desktop\\counter-app\\src\\components\\counters.jsx":"5","C:\\Users\\frsna\\OneDrive\\Desktop\\counter-app\\src\\components\\navbar.jsx":"6"},{"size":561,"mtime":1611887212530,"results":"7","hashOfConfig":"8"},{"size":2413,"mtime":1611901469782,"results":"9","hashOfConfig":"8"},{"size":375,"mtime":1611610415290,"results":"10","hashOfConfig":"8"},{"size":1510,"mtime":1611898250759,"results":"11","hashOfConfig":"8"},{"size":1050,"mtime":1611899960303,"results":"12","hashOfConfig":"8"},{"size":555,"mtime":1611901494786,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1o8yfr5",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"16"},"C:\\Users\\frsna\\OneDrive\\Desktop\\counter-app\\src\\index.js",[],["30","31"],"C:\\Users\\frsna\\OneDrive\\Desktop\\counter-app\\src\\App.js",["32"],"import React, { Component } from 'react';\r\nimport NavBar from './components/navbar';\r\nimport Counters from './components/counters';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n\r\n    state = {\r\n      counters: [\r\n          { id: 1, value: 0},\r\n          { id: 2, value: 0},\r\n          { id: 3, value: 0},\r\n          { id: 4, value: 0},\r\n      ]\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    console.log('App - Constructor');\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log('App - Mounted');\r\n  }\r\n\r\n  handleDelete = (counterId) => {\r\n      const counters = this.state.counters.filter(c => c.id !== counterId);\r\n      this.setState({ counters });\r\n  };\r\n\r\n  handleAdd = () => {\r\n      const copy = [...this.state.counters];\r\n      const lastId = (this.state.counters.length == 0) ? 0 : copy[copy.length - 1].id;\r\n      const newCounter = { id: lastId + 1, value: 0 };\r\n      \r\n      const counters = this.state.counters.concat(newCounter);\r\n      // classes += (this.props.counter.value === 0) ? \"warning\" : \"primary\";\r\n\r\n      this.setState({ counters })\r\n      console.log(counters);\r\n  };\r\n\r\n  handleReset = () => {\r\n      const counters = this.state.counters.map(c => {\r\n          c.value = 0;\r\n          return c;\r\n      }); \r\n      this.setState({ counters });\r\n  };\r\n\r\n  handleIncrement = counter => {\r\n      const counters = [...this.state.counters];\r\n      const index = counters.indexOf(counter);\r\n      counters[index] = { ...counter };\r\n      counters[index].value++;\r\n      this.setState({ counters });\r\n  };\r\n\r\n  handleDecrement = counter => {\r\n      const counters = [...this.state.counters];\r\n      const index = counters.indexOf(counter);\r\n      counters[index] = { ...counter };\r\n      if (counters[index].value !== 0)\r\n      {\r\n          counters[index].value--;\r\n      }\r\n      this.setState({ counters });\r\n  };\r\n\r\n  render() {\r\n    console.log('App - Rendered');\r\n\r\n    return (\r\n      <React.Fragment>\r\n      <NavBar totalCounters={this.state.counters.filter(c => c.value > 0).length}/>\r\n      <main className=\"container\">\r\n        <Counters\r\n          counters={this.state.counters}\r\n          onAdd={this.handleAdd}\r\n          onReset={this.handleReset}\r\n          onDelete={this.handleDelete}\r\n          onIncrement={this.handleIncrement}\r\n          onDecrement={this.handleDecrement}\r\n        />\r\n      </main>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\frsna\\OneDrive\\Desktop\\counter-app\\src\\reportWebVitals.js",[],"C:\\Users\\frsna\\OneDrive\\Desktop\\counter-app\\src\\components\\counter.jsx",[],["33","34"],"C:\\Users\\frsna\\OneDrive\\Desktop\\counter-app\\src\\components\\counters.jsx",[],"C:\\Users\\frsna\\OneDrive\\Desktop\\counter-app\\src\\components\\navbar.jsx",["35","36"],"import React, { Component } from 'react';\r\n\r\nconst NavBar = ({ totalCounters }) => {\r\n    console.log('NavBar - Rendered');\r\n\r\n    return ( \r\n        <nav className=\"navbar navbar-light bg-light\">\r\n            <div className=\"container-fluid\">\r\n                <a className=\"navbar-brand\" href=\"#\">Navbar</a>\r\n                    Navbar\r\n                    <span className=\"badge badge-pill badge-secondary\">\r\n                        {totalCounters}\r\n                    </span>\r\n            </div>\r\n        </nav>\r\n     );\r\n};\r\n \r\nexport default NavBar;",{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":33,"column":50,"nodeType":"43","messageId":"44","endLine":33,"endColumn":52},{"ruleId":"37","replacedBy":"45"},{"ruleId":"39","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":1,"column":17,"nodeType":"49","messageId":"50","endLine":1,"endColumn":26},{"ruleId":"51","severity":1,"message":"52","line":9,"column":17,"nodeType":"53","endLine":9,"endColumn":54},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["54"],["55"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]